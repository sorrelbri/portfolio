{"version":3,"sources":["components/Nav.js","components/About.js","components/BrowserGoDetail.js","components/logos/GitHub.js","components/BrowserGo.js","components/AStardustTruceDetail.js","components/AStardustTruce.js","components/Projects.js","components/Resume.js","components/logos/LinkedIn.js","components/logos/Medium.js","components/Links.js","components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["Nav","href","About","className","id","BrowserGoDetail","props","onClick","e","handleClick","GitHub","xmlns","xlink","width","height","viewBox","BrowserGo","state","showDetail","preventDefault","setState","this","src","alt","Component","AStardustTruceDetail","AStardustTruce","Projects","Resume","download","LinkedIn","Medium","Links","target","rel","Contact","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1bc44bdd.chunk.js","sourcesContent":["import React from 'react';\n\nconst Nav = () => {\n  return (<nav>\n    <a href=\"#Bio\">Bio</a>\n    <a href=\"#Projects\">Projects</a>\n    <a href=\"#Contact\">Contact</a>\n  </nav>);\n}\n\nexport default Nav;","import React from 'react';\nimport './About.scss';\n\nconst About = () => {\n  return (\n    <div className=\"section About\" id=\"Bio\">\n      <h3 className=\"About__header\">Bio</h3>\n      <div className=\"About__bio\">\n        <p className=\"About__bio__line\">\n        Strategic and incisive, Sorrel is an engineer on an eternal quest for the most elegant software solutions to complex problems and whose work ethos is ‘share all knowledge, always.’ \n        </p>\n        <p className=\"About__bio__line\">\n        Before plunging into software, Sorrel juggled tight deadlines, varied stakeholder interests, and sensitive information in data projects for a nonprofit development department. \n        </p>\n        <p className=\"About__bio__line\">\n        Possessed of a drive to understand, bits to abstracts, she is better at math today than she was yesterday.\n        </p>\n      </div>\n    </div>\n  );\n}\nexport default About;","import React from 'react';\n\nconst BrowserGoDetail = (props) => {\n  return (<div className=\"project__project-detail \">\n  <p>\n    Browser Go is an under construction proof of concept matchmaking server for players of the boardgame Go.\n  </p>\n  <br/>\n  <p>\n    Prototype built with JavaScript. Full stack application built with Flask and React.\n  </p>\n  <br/>\n  <p>\n    <a href=\"/\" onClick={e=>props.handleClick(e)}>Back to the screenshot!</a>\n  </p>\n</div>);\n}\n\nexport default BrowserGoDetail;","import React from 'react';\nimport './Logo.scss';\n\nconst GitHub = () => {\n  return (\n    <div className=\"GitHub-link\">\n      <svg \n        className=\"GitHub-link__svg\"\n        xmlns=\"http://www.w3.org/2000/svg\" \n        xlink=\"http://www.w3.org/1999/xlink\" \n        width=\"2247\" \n        height=\"224\" \n        viewBox=\"0 0 224 224\"\n        >\n      <image \n        width=\"224\" \n        height=\"224\" \n        href=\"data:img/png;base64,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\"\n      />\n    </svg>\n  </div>);\n}\n\nexport default GitHub;","import React, { Component } from 'react';\nimport BrowserGoDetail from './BrowserGoDetail';\nimport GitHub from './logos/GitHub';\n\nclass BrowserGo extends Component {\n  state = { showDetail: false }\n\n  handleClick = e => {\n    e.preventDefault();\n    this.setState(state => state.showDetail = state.showDetail \n      ? false \n      : true);\n  }\n\n  render() { \n    return (\n      <div className=\"project\">\n        <h3>Browser Go</h3>\n        <div className=\"project__project-general__links\">\n          <div className=\"project__links__github\">\n            <GitHub/>\n            <a \n              href=\"https://github.com/sorrelbri/browser-go-api\"\n            >API Repo</a>\n            <a \n              href=\"https://github.com/sorrelbri/browser-go-react\"\n            >Frontend Repo</a>\n          </div>\n          <div className=\"project__links__open-app\">\n            <a href=\"https://sorrelbri.github.io/browser-go-proto/\">Open Prototype</a>\n          </div>\n        </div>\n        {this.state.showDetail \n          ? <BrowserGoDetail handleClick={this.handleClick}/>\n          : <>\n            <a href=\"/\" onClick={e=>this.handleClick(e)}><h5>What is Browser Go?</h5></a>\n            <img \n              src=\"%PUBLIC_URL%/browser-go-screenshot-full-board.png\" \n              alt=\"Screenshot of a Browser Go game in session on a 19 by 19 board.\"\n            />\n          </>\n        }\n      </div>\n    );\n  }\n}\n\nexport default BrowserGo;","import React from 'react'\n\nconst AStardustTruceDetail = (props) => {\n  return (<div className=\"project__project-detail \">\n    <p>\n      A Stardust Truce seeks to elevate student comprehension of core computer science concepts by providing an interactive utility that allows users to build common data structures from prefabricated code blocks.\n    </p>\n    <br/>\n    <p>\n      A Stardust Truce was built with Django to write and serve Python and JavaScript files based on user input.\n    </p>\n    <br />\n    <p>\n      <a href=\"/\" onClick={e=>props.handleClick(e)}>Back to the screenshot!</a>\n    </p>\n  </div>);\n}\n\nexport default AStardustTruceDetail;","import React, { Component } from 'react';\nimport AStardustTruceDetail from './AStardustTruceDetail';\nimport GitHub from './logos/GitHub';\n\nclass AStardustTruce extends Component {\n  state = { showDetail: false }\n\n  handleClick = e => {\n    e.preventDefault();\n    this.setState(state => state.showDetail = state.showDetail\n      ? false\n      : true);\n  }\n\n  render() { \n    return (\n      <div className=\"project\">\n        <h3>A Stardust Truce</h3>\n        <div className=\"project__project-general__links\">\n          <div className=\"project__links__github\">\n            <GitHub/>\n            <a \n              href=\"https://github.com/sorrelbri/a-stardust-truce\"\n              >A Stardust Truce Repo\n            </a>\n          </div>\n          <div className=\"project__links__open-app\">\n            <a href=\"https://astardusttruce.herokuapp.com/\">Open App</a>\n          </div>\n        </div>\n        {this.state.showDetail\n          ? <AStardustTruceDetail handleClick={this.handleClick}/>\n          : <>\n            <a href=\"/\" onClick={e=>this.handleClick(e)}><h5>What is A Stardust Truce?</h5></a>\n            <img \n              src=\"%PUBLIC_URL%/a-stardust-truce-screenshot-python.png\" \n              alt=\"screenshot from A Stardust Truce application featuring generated Python code for a Stack instantiated as a linked list.\"\n            />\n          </>\n        }\n      </div>\n    );\n  }\n}\n \nexport default AStardustTruce;\n","import React from 'react';\nimport BrowserGo from './BrowserGo';\nimport AStardustTruce from './AStardustTruce';\nimport './Projects.scss'\n\nconst Projects = () => {\n  return (<>\n    <h3>Projects</h3>\n    <div className=\"section Projects\" id=\"Projects\">\n      <BrowserGo />\n      <AStardustTruce />\n    </div>\n  </>);\n}\nexport default Projects;","import React from 'react'\n\nconst Resume = () => {\n  return (<>\n    <div className=\"Contact__link Contact__link__resume\">\n      <a href=\"sorreljune.resume.web.1019.pdf\" download>\n          <p>Download Resume</p>\n      </a>\n    </div>\n  </>);\n}\n\nexport default Resume;","import React from 'react';\nimport './Logo.scss';\n\nconst LinkedIn = () => {\n  return (\n    <div className=\"LinkedIn-link\">\n      <svg \n        className=\"LinkedIn-link__svg\"\n        xmlns=\"http://www.w3.org/2000/svg\" \n        xlink=\"http://www.w3.org/1999/xlink\" \n        width=\"112\" \n        height=\"112\" \n        viewBox=\"0 0 112 112\">\n      <image width=\"112\" height=\"112\" href=\"data:img/png;base64,iVBORw0KGgoAAAANSUhEUgAAAnsAAAIcCAMAAAC5G5hHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAANlBMVEX///8oZ7IoZ7IoZ7IoZ7IoZ7IoZ7IoZ7IoZ7IoZ7IoZ7IoZ7IoZ7IoZ7IoZ7IoZ7IoZ7IAAAAXd3/xAAAAEHRSTlMAEEBwgJDAsCBgoODQMPBQFu1vqwAAAAFiS0dEEeK1PboAAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfjChUKHCZIniH2AAAUnUlEQVR42u2d2baiMBAAZZFV8P7/184Iigu7Jul0qHqZM4reNl0nO+R0WiGKk/ScQUjkaRJHa4kXpiir+g/CpM7LQlqwOaLkIl08YJlL4mP111TS5QJOqGJp1T6IM+kiAWdkPtlXUOcdi9ybjl/SSpcFOKZNpaXrKGhuj8jFg6rvSqV3TNqrtHqJdBGAGImsegwyjkyFeiCFoHyod3TE5DtL/3IQR0i+Uvp3gweUEuo10r8avKBxr17EZim4Ubvf2UJnD3py1+rF0r8YvMH1thZaXHhQu1Uvlf694BFON7VEbCCAJ63L4QbVHrzisuKj2oNXHFZ8rGjAO+5WN9ipDO9cXKlXSP9S8A5XO+jZqwyfuNrDTJMLnzhqdCPp3wke4maky1IujHFz1xoTyzDGzfRyLv0zwUMyJ+7xpDMY42Yzi/SvBC9xoR7DXJjCxewyw1yYwsXuZdyDKXAPpMA9kAL3QArcAylwD6TAPZAC90AK3AMpcA+kwD2QAvdACtwDKXAPpMA9kAL3QArcAylwD6TAPZAC90AK3AMpcA+kwD2QAvdACtwDKXAPpMA9kAL3QArcAylwD6TAPZAC90AK3AMpcA+kwD2QAvdACtwDKUJ0L6vSMr6TpBWHWHpKYO7VVdmMA2iSqpUuaBgRknv1uZkPojnX0mUN74TjXrX6U66cKegVgbjXpptOAi5oez0iCPc2mncjqqRLHB6E4F6161C4gnGvJ+h3r979E640vF6g3r3z5ub2ScSgwweUu9devwspkS530O7epfk2poZ2VxzV7l2+aG8fRBfpoj88mt2rfooK+aRR7N5v6iGfOHrd+1U95JNGrXsXA4Ehnyha3ftlmPEiH6NdQZS61349ufJOI13+R0ape19OKY9hklkOne6dzQXH8poYKt0z09nrocsnhkr3jAZ9lU7BYdHo3u8ze2+wn08Ihe61BlvcG4V0Do6KQvdS0/GdpZNwUPS5Z7raY7ghhT73jFd7VHxCqHPPfLVHj08Ide4ZnFZ+wo2TEqhzb9f9kFthjk8Cbe6Z2Do1Ac9qEUCbe4mdEBltCKDNPStNLnupRFDmnqUm93Riis89ytyzMsq9wUjXPcrcM7Zn9JNSOhEHRJl7FiaWe+jwuUeXe7W9IKUTcUB0uZfbC5JdfM7R5Z6FfQQPGGw4R5d7pb0gU+lMHA9d7lmMloGuc3DPeJCwEV3uWVpRwz0RdLmnIkjYCO7hnhS4h3tS4B7uSaHLPWvLubgngC73mGMJCdy7w9yyc3S5x5paSOhyj70EIaHLPfZQhYQu96zdKsTeUQF0ufdnLUYeyeIeZe5ZC5dhrnuUuWdtsMFQwz3K3LPW4eOBLO5R5p6tVTVukRRAm3uWZpd5FpAA2tyzNMNHkyuANvfsbJunyZVAnXtWRrqMciVQ515rIcBIOgvHRJ17NkYb7GERQZ975p8HxNkuMuhzz3zFR7Ung0L3asPzy1R7Qih0z/RQl0GuEBrdMzvHx01CUqh0LzMYXMSShhQq3TPZ6rKSK4ZO9/4aU7FxkpocSt0zNdZtGOPKodQ9Q5tIo4t0+R8Zre79VSYi48ZISdS6Z0I+ZvZE0eve7/KhniyK3ftVPtQTRrN7P8kX0deTRrV7f5evp1oKRrji6Hbvr/5ykjlmXk8e5e59ubzGQpoPqHfvL9u9q6WhvfUC/e79r/p29foiKj1PCMG9v3rHNvqUnp4vBOHeZvuihN16/hCIe//tS1f7fcWZOs8ngnHvP3m50PErEkYYnhGSe//J0qkfFMUp4vlHYO7duORpGcd36eIyzfHOTwJ0D5SAeyAF7oEUuAdS4B5IgXsgBe6BFLgHUuAeSIF7IAXugRS4B1LgHkiBeyAF7oEUuAdS4B5IgXsgBe6BFLgHUuAeSIF7IAXugRS4B1LgHkiBeyAF7oEUuAdS4F4AtNkrah4yiHuKyaq0jKdPeSji+Jqmeebzc1ZxTydZet34fP0iTs5+1oW4p4/pB1yuGHhNvTvEC/d00Vbl90emN0kuHf8ruKeJ/Pp7Ms7edAFxTw118n2N90bjiX4a3Utio+w/R7cS+OuV0Uw1lQejD43uGY453R3AV+cH/vLX22r3oXGrlOKPQMc9/91r9x0Ytz0vwien45737p3tmHejELUP9zx3Lzff2r4iaR/uee1ebT8/jdicM+557F5r8g/NcxWacsE9f93bfyL6lwgdZ4173rqXOEjNkCKJqg/3PHXv0vz+3TuIBMYcuOene5W9iZUZSucrHbjno3tt6SAtnzSuFzpwz0P3Wrft7YPI8Q4r3PPPvYvz9vaB204f7nnnnvuu3pME947sXuUgI/OUuHdc92TVcyof7vnlnssJ5WncyYd7XrknMbfyiTP5cM8n984OsrGOq9Eu7nnknnRf74Ej+XDPH/d8Ue8UuVnhwD1v3Ls4SMVGCidru7jni3tyqxkTOLmlGvc8cU9oDddcoYjncRLc2/DXf3/ahVkcdPlwzw/33NyZsQMHXT7c88K9zEEadmJ/WwHu+eBe6+quoD1Yv3cS93xwz7fOXkeDewdwL3eQBCcFg3vWi9iwe61PM3svRJaHG7gn756XLe4NyztacE/cPQ/HuA/s3jGOe+Lu+TjGvXPFvZDd8xur8yy4h3sLWK34cA/3lrDZ48M93FvC5lAX93BvEYsVH+7hnuHSwT2bpXsk9yLcwz0p7N20hnu4t4y9WzdwD/dWsDbawD3cW8HaBmbcw70VCtzDPSls3bKGe7i3hq1GF/dwbw1bjS7u4d4qlhpd3MO9VSw1uriHe6tYulsS93BvHTvTy7iHe+vYWdPFPdxbx87WedzDvXXsbKTCPdzbgJVZFtzDvQ1YOdQe93BvA1Y6fLiHexuwsqyGe7i3BRszfLiHe1uwcaQ47qlxL4rj9EaeVbd/4tjlY/tsLOningb3mqSaeipPm52vjgS0cccQ7vnuXpEst3eXxMlD1HDvaO5F5ZZZ3czBsbsWBhu457F7RbX1ice1dfssDDZwz1v3il27R2rLmbTwXBbc89S9aHdYudVhh4WVDdzz0734i/6V1aMoLexdxj0v3fty7d5mr8+4erjno3vfnxlvMTLz26hwzz/3mh/mMyprUZl/5Dzueede89NRUtaaXfMDXdzzzb3f1LN3Qpb5FV3c88y9n8/rtjXaNb+ii3t+uff9MGPgYicy85MsuOeXeybuhLUUnuEs4t7JL/fMdKrstLrGT9PFPZ/c+7mz12PnVFTjkyy455N7ptJrJau4Zz5mf9wzdnhZbSM64/fo4p4/7kXm9mfaSKvxyWXc88c9g8m10eMzPrmMe964F5kcSFq4h8P45DLueeOe0Tbt7H8acc8f94zejdOaj8/4czFwzxf3DJ/QbWFLgeE04p437hmePrOwkc9wGnHPF/dMt2gWGl3DEeKeL+4Zn8Ewv6hremED9zxxz/jtEOaDxL0w3TP/cEXz08u4F6Z7Fp4xZjxG3AvTPfN3gZlPrekFXdzzwz3DRXQjMR0j7gXpno1HKxqf4cO9IN2z8JQn8/cM4V6Q7lno7pkfbOBekO4ZLqEe07PLhleccc8L9+wcjmw6t57nUWPMHrhn54xQ02F6nkeNMXvgno2hhvn9o57nUWPMHrhnZahhfFXN8zxqjNkD96wcT4t7/sfsgXuGC+jBsfKoMWZ596ycEPqHe/7HLO+ejRW1G4YPPfA8jxpjlnfP9KStpYLyPI8aY5Z3z84UC+75H7O8e8afsmOnoDzPo8aY5d2zM71nfAdf5HceJ8G9FWy5ZzpOv/M4Ce6tYGdqGfdOuOc6p1rixD3ck4oT9wJ2z/RGFr/zOAnuLWN6/DhgejOB33mcBPfcls8A7uGe4/IZwD3cc1w+A7iHe47LZwD3cM9x+QzgHu45Lp8B3MM9x+UzgHu457h8BnAP9xyXzwDu4Z7j8hnAPdxzXD4DuId7jstnAPdwz3H5DOAe7jkunwHcwz3H5TOAe7jnuHwGcA/3HJfPAO7hnuPyGcA93HNcPgO4h3uOy2cA93DPcfkM4B7uOS6fAdzDPcflM4B7uOe4fAZwD/ccl88A7uGe4/IZwD3cc1w+A7iHe47LZwD3cM9x+QzgHu45Lp8B3MM9x+UzgHu457h8BnAP9xyXzwDu4Z7j8hnAPdxzXD4DuId7jstnAPdwz3H5DOAe7jkunwHcwz3H5TOAe7jnuHwGcA/3HJfPAO7hnuPyGcA93HNcPgO4h3uOy2cA93DPcfkM4B7uOS6fAcPumT7vEvdwL5A8aowZ98LIo8aYcS+MPGqMGffCyKPGmHEvjDxqjBn3wsijxphxL4w8aowZ98LIo8aYcS+MPGqMGffCyKPGmHEvjDxqjBn3wsijxphxL4w8aowZ98LIo8aYcS+MPGqMGffCyKPGmHEvjDxqjBn3wsijxphxL4w8aowZ98LIo8aYcS+MPGqMGffCyKPGmHEvjDxqjBn3wsijxphxL4w8aowZ98LIo8aYcS+MPGqMGffCyKPGmHEvjDxqjBn3wsijxphxL4w8aowZ98LIo8aYcS+MPGqMGffCyKPGmHEvjDxqjBn3wsijxphxL4w8aowZ98LIo8aYcS+MPGqMGffCyKPGmHEvjDxqjBn3wsijxphxL4w8aowZ98LIo8aYcS+MPGqMGffCyKPGmHEvjDxqjBn3wsijxphxL4w8aowZ98LIo8aYcS+MPGqMGffCyKPGmHEvjDxqjBn3wsijxphxL4w8aowZ98LIo8aYcS+MPGqMGffCyKPGmHEvjDxqjBn3wsijxphxL4w8aowZ98LIo8aYcS+MPGqMGffCyKPGmHEvjDxqjBn3wsijxphxL4w8aowZ98LIo8aYcS+MPGqMGffCyKPGmHEvjDxqjBn3wsijxphxL4w8aowZ98LIo8aYcS+MPGqMGffCyKPGmHEvjDxqjBn3wsijxphxL4w8aowZ98LIo8aYcS+MPGqMGffCyKPGmHEvjDxqjBn3wsijxphxL4w8aowZ98LIo8aYcS+MPGqMGffCyKPGmHEvjDxqjBn3wsijk5gvmVHq3QHUZgO4GC6fgdbvODW6B2GAeyAF7oEUuAdS4B5IgXsgBe6BFLgHUuAeSIF7IMV37sVJmt8XWvK0XPsO3IMp9rvXnMfrelna4B7sZKd7xXlu5b1OC9yDPexyL84WvyuPcQ+2s8O9d/OyrErTtMreX2xwD7ay2b0oHz5Tn6+v7WtRVs+G+BzhHmxjq3vX9v6B6X5dc368315xDzaxzb2oul+eXWevKR+V3xn3YAub3CvusyqX5asf9l0+2l3cgym2uNf07WmbrF55v+2mfh9y4B5MscG9u3pZsX7pqelryPZNPtyDKdbdu6t3Xr2w494zfJMP92CKVffu6pXb1PtP2V3fvvT5cA+mWHMv6sYP7Z7lj16+lwEH7sEUa1L1yxbNaQ+9fBXuwSIr7vUD1+0N7qt8w6dwD6ZYdq/prlmfW/nkfPtY+xgY4x5MsexeN2OSv1k1ekrHOY3Ha7hdU53hHiyw6F7XdtbRSKoR+WerXHSj4yvuwTxL7kXt+Iq5HXyXj+FIry3uwTxL7nUDjfy0yb2PpYz7hSXuwSxL7nXVXrHRvU/5umFKjXswy4J7XbNZnabce+3ZlcP+qvcru5evuAdzLLjXDXKLNfdOzy1WExVfjnswx7x7xe3tz2pv0r37wtvndoPu0gj3YIZ599LJtyfduy9kZBMvlrgHM8y7d2tI69Gr0+5Ff1Mv38YqOe7BDLPudTqNN+1Nu3f6m3o5v7+GezDFrHvX27vjO4P2uFfe/wDuwRSz7nXdvfHLe9zrRisJ7sE0s+7dJLtsda/f79J+vnzr8FW4B9PMunebNqnGL0+7108v51MXZ7gH08y6d3tz4tywSff6KZbxFtN7u417MMWce11fbeIhBBPuRfe7cttoxr1I+keCl8zddNvVVfGce/FAmQ67C8bbm7ux8ukxEgF44/SVe1NU819i7aBEUExtzL1q4UvyreHAgcgMudeWS1+y/3RkCJ/UhHt1XkbzX9Iw0IUprt+5l3Z0d0KOZ/WedHMvJwa6MEU0p02nSznn3v0/fT9u/nGQw7pc9m18ECyXWW1Ot7fX5pb7G9naWYFvFWM3mkmkfyh4x8ITB27zIhPN6fvccr+gMdvq3tfU7jPVAC8sPM7x1p7W0zq9zAr2/51rdW/vnV+uA3iw0OT2fbWxmx/uFUutbre7pXypIAEeLD1fKp6+4HM9t5+6m251u17e/ea19tsYIUja0xK3K8aLFaO9BP162WSre3n5G0wvwyuzE8sdtw7fuDEduXffNjrR6r7dZBlR8cGT+bmRZxdt1OiO91DNzjB3Te5QIVLxwZPlaq+fXR6t947du98YPm51b6+37/8FuDG7heW10R0tq03sHe1Xa0e16OfjXFjUhQerj47vZPms+Kb2zPdLa5+tblfPvU7SVN9GCoExtd/ug24I+6HolHv3ccT7lV2192ZuRKsLN+rlgcZTn4/554V7hd6+shftXcdG+keDF2w6MaMTLR2/9Dd54dsTNLrR72eDzeoGbD0xox8evGk67V7x2er2nxwtyZ2lfzeIs/Fgvn548HYcbtntGh1deO1eHozue4DpzBfCgdkwznh1KN96+UA3SpncqYB8x2azeo+2c8cHXgRrFt6DY7LLpHT/R+56zXUp2cN8XHaejtZPHO+Rr1r5xJVtBcekve6w6EbUb5KqNswH9tf3I+GlPmLBLuYjkhUbFRrJd9n2yeZ+9bKqKVXf0Wj3n0b6lK/dMieY9FJd1mrJgsdkHItqf6XXy3dvI1crzeZ+4ZbeYUzDexyy1Y0r8zzWIxbtLR7TJ+m2L42ZbjkG1Q/mnV7GptXcQvBgUrv9L0UJT0cLnUuydZQ6X6llzy8bV35NMuyPyvf9qaLM2VoVKnVVftnN+6CsX74zGc6pL+Kkennnm+o1ipM0zyAkqvSpiAGiz5mRS/ZRZdXbtscA7CZKltrHC+aBTeJqelq4Pm/ajQrwC02avfvX5gnigSuiuN9EmqbX1S7lP3qjQk4PfjQCAAAAAElFTkSuQmCC\"/>\n    </svg>\n  </div>);\n}\n\nexport default LinkedIn;","import React from 'react';\nimport './Logo.scss';\n\nconst Medium = () => {\n  return (\n    <div className=\"Medium-link\">\n      <svg \n        className=\"Medium-link__svg\"\n        xmlns=\"http://www.w3.org/2000/svg\" \n        xlink=\"http://www.w3.org/1999/xlink\" \n        width=\"112\" \n        height=\"112\" \n        viewBox=\"0 0 112 112\"\n        >\n        <image width=\"112\" height=\"112\" href=\"data:img/png;base64,\"/>\n      </svg>\n    </div>\n  );\n}\n\nexport default Medium;","import React from 'react';\nimport './Links.scss';\nimport GitHub from './logos/GitHub';\nimport LinkedIn from './logos/LinkedIn';\nimport Medium from './logos/Medium';\n\nconst Links = () => {\n  return (<div className=\"Links\">\n    <div className=\"Contact__link Contact__link__github\">\n      <a \n        href=\"https://github.com/sorrelbri\"\n        target=\"_blank\" \n        rel=\"noopener noreferrer\" \n        >\n        <GitHub/>\n        <p>GitHub</p>\n      </a>\n    </div>\n    \n    <div className=\"Contact__link Contact__link__linkedin\">\n      <a \n        href=\"https://www.linkedin.com/in/sorrel-june/\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <LinkedIn />\n        <p>LinkedIn</p>\n      </a>\n    </div>\n    \n    <div className=\"Contact__link Contact__link__medium\">\n      <a \n        href=\"https://medium.com/@sorrel.bri.june\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Medium />\n        <p>Medium</p>\n      </a>\n    </div>\n    \n  </div>);\n}\n\nexport default Links;","import React from 'react';\nimport './Contact.scss';\nimport Resume from './Resume';\nimport Links from './Links';\n\nconst Contact = () => {\n  return (<>\n    <div className=\"footer-area\">\n    </div>\n    <div className=\"section\" id=\"Contact\">\n      <div className=\"Contact__personal\">\n        <h3>Contact</h3>\n        <div className=\"Contact__link Contact__link__email\">\n          <a href=\"mailto:sorrel.bri.june@gmail.com\">\n              <p>Email Me</p>\n          </a>\n        </div>\n        <Resume />\n      </div>\n      <Links />\n    </div>\n  </>);\n}\n\nexport default Contact;","import React from 'react';\nimport './App.scss';\nimport Nav from './components/Nav';\nimport About from './components/About';\nimport Projects from './components/Projects';\nimport Contact from './components/Contact';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <header \n          className=\"App-header__header\"\n        >Sorrel June</header>\n        <h4><code>\n        {`\nconst writeCode = code => {\n  let newCode = {...code}; \n  newCode.value++; \n  return newCode;\n}\n          `}\n          </code></h4>\n      </div>\n      <div className=\"arrow-container\">\n        <div className=\"arrow-container__arrow\"></div>\n      </div>\n      <Nav />\n      <content>\n        <About />\n        <Projects />\n        <Contact />\n      </content>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />\n  , \n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}